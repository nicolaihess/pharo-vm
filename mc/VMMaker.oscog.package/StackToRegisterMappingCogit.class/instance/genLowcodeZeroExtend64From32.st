inline primitive generators generated code
genLowcodeZeroExtend64From32
	<option: #LowcodeVM>
	<inline: true>
	"Generated by the Lowcode instruction generator."
	| resultLow resultHigh value result |
	BytesPerWord = 4 ifTrue: [
		self allocateRegistersForLowcodeIntegerResultInteger2: [:valueValue :resultLowValue :resultHighValue |
			value := valueValue.
			resultLow := resultLowValue.
			resultHigh := resultHighValue.
		].

		self ssNativeTop nativePopToReg: value.
		self ssNativePop: 1.

		self MoveR: value R: resultLow.
		self MoveCq: 0 R: resultHigh.
		self ssPushNativeRegister: resultLow secondRegister: resultHigh.

	] ifFalse: [
		self allocateRegistersForLowcodeIntegerResultInteger: [:valueValue :resultValue |
			value := valueValue.
			result := resultValue.
		].

		self ssNativeTop nativePopToReg: value.
		self ssNativePop: 1.

		self ZeroExtend32R: value R: value.
		self ssPushNativeRegister: value.

	].
	^ 0

