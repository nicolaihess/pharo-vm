inline primitive generators generated code
genLowcodeLoadArgumentInt64
	<option: #LowcodeVM>
	<inline: true>
	"Generated by the Lowcode instruction generator."
	| valueHigh value valueLow baseOffset |
	baseOffset := extA.
	BytesPerWord = 4 ifTrue: [
		self allocateRegistersForLowcodeResultInteger2: [:valueLowValue :valueHighValue |
			valueLow := valueLowValue.
			valueHigh := valueHighValue.
		].


		"TODO: Check the endianness"
		self loadNativeArgumentAddress: baseOffset to: TempReg.
		self MoveM32: 0 r: TempReg R: valueLow.
		self MoveM32: 4 r: TempReg R: valueHigh.
		self ssPushNativeRegister: valueLow secondRegister: valueHigh.

	] ifFalse: [
		self allocateRegistersForLowcodeResultInteger: [:valueValue |
			value := valueValue.
		].


		self loadNativeArgumentAddress: baseOffset to: TempReg.
		self MoveM64: 0 r: TempReg R: value.
		self ssPushNativeRegister: value.

	].
		extA := 0.
	^ 0

