inline primitive generators generated code
genLowcodeOopSmallIntegerToInt64
	<option: #LowcodeVM>
	<inline: true>
	"Generated by the Lowcode instruction generator."
	| valueHigh object value valueLow |
	BytesPerWord = 4 ifTrue: [
		self allocateRegistersForLowcodeOopResultInteger2: [:objectValue :valueLowValue :valueHighValue |
			object := objectValue.
			valueLow := valueLowValue.
			valueHigh := valueHighValue.
		].

		self ssTop popToReg: object.
		self ssPop: 1.

		objectRepresentation genConvertSmallIntegerToIntegerInReg: object.
		self MoveCq: 0 R: valueHigh.
		self ssPushNativeRegister: object secondRegister: valueHigh.

	] ifFalse: [
		self allocateRegistersForLowcodeOopResultInteger: [:objectValue :valueValue |
			object := objectValue.
			value := valueValue.
		].

		self ssTop popToReg: object.
		self ssPop: 1.

		objectRepresentation genConvertSmallIntegerToIntegerInReg: object.
		self ssPushNativeRegister: object.

	].
	^ 0

