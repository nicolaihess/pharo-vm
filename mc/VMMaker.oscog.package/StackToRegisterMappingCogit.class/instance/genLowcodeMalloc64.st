inline primitive generators generated code
genLowcodeMalloc64
	<option: #LowcodeVM>
	<inline: true>
	"Generated by the Lowcode instruction generator."
	| sizeHigh size sizeLow pointer |
	BytesPerWord = 4 ifTrue: [
		self allocateRegistersForLowcodeInteger2ResultInteger: [:sizeLowValue :sizeHighValue :pointerValue |
			sizeLow := sizeLowValue.
			sizeHigh := sizeHighValue.
			pointer := pointerValue.
		].

		self ssNativeTop nativePopToReg: sizeLow secondReg: sizeHigh.
		self ssNativePop: 1.

		self ssFlushAll.
		sizeLow ~= ReceiverResultReg ifTrue: [self MoveR: sizeLow R: ReceiverResultReg ].
		self CallRT: ceMallocTrampoline.
		self MoveR: TempReg R: pointer.
		self ssPushNativeRegister: pointer.

	] ifFalse: [
		self allocateRegistersForLowcodeIntegerResultInteger: [:sizeValue :pointerValue |
			size := sizeValue.
			pointer := pointerValue.
		].

		self ssNativeTop nativePopToReg: size.
		self ssNativePop: 1.

		self ssFlushAll.
		size ~= ReceiverResultReg ifTrue: [self MoveR: size R: ReceiverResultReg ].
		self CallRT: ceMallocTrampoline.
		self MoveR: TempReg R: pointer.
		self ssPushNativeRegister: pointer.

	].
	^ 0

