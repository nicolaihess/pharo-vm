inline primitive generators generated code
genLowcodeBoolean64ToOop
	<option: #LowcodeVM>
	<inline: true>
	"Generated by the Lowcode instruction generator."
	| value inst trueJump2 cont valueLow object trueJump valueHigh |
	BytesPerWord = 4 ifTrue: [
		self allocateRegistersForLowcodeInteger2ResultOop: [:valueLowValue :valueHighValue :objectValue |
			valueLow := valueLowValue.
			valueHigh := valueHighValue.
			object := objectValue.
		].

		self ssNativeTop nativePopToReg: valueLow secondReg: valueHigh.
		self ssNativePop: 1.

		self OrR: valueLow R: valueHigh.
		trueJump := self JumpNonZero: 0.
		"False"
		self annotate: (self MoveCw: objectMemory falseObject R: valueLow) objRef: objectMemory falseObject.
		cont := self Jump: 0.
		"True"
		inst := self MoveCw: objectMemory trueObject R: valueLow.
		trueJump jmpTarget: inst.
		self annotate: inst objRef: objectMemory trueObject.
		cont jmpTarget: self Label.
		self ssPushRegister: valueLow.

	] ifFalse: [
		self allocateRegistersForLowcodeIntegerResultOop: [:valueValue :objectValue |
			value := valueValue.
			object := objectValue.
		].

		self ssNativeTop nativePopToReg: value.
		self ssNativePop: 1.

		self CmpCq: 0 R: value.
		trueJump := self JumpNonZero: 0.
		"False"
		self annotate: (self MoveCw: objectMemory falseObject R: value) objRef: objectMemory falseObject.
		cont := self Jump: 0.
		"True"
		inst := self MoveCw: objectMemory trueObject R: value.
		trueJump jmpTarget: inst.
		self annotate: inst objRef: objectMemory trueObject.
		cont jmpTarget: self Label.
		self ssPushRegister: value.

	].
	^ 0

