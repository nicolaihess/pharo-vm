inline primitive generators generated code
genLowcodeLoadInt64FromMemory
	<option: #LowcodeVM>
	<inline: true>
	"Generated by the Lowcode instruction generator."
	| valueHigh pointer value valueLow |
	BytesPerWord = 4 ifTrue: [
		self allocateRegistersForLowcodeIntegerResultInteger2: [:pointerValue :valueLowValue :valueHighValue |
			pointer := pointerValue.
			valueLow := valueLowValue.
			valueHigh := valueHighValue.
		].

		self ssNativeTop nativePopToReg: pointer.
		self ssNativePop: 1.

		"TODO: Check the endianness"
		self MoveM32: 0 r: pointer R: valueLow.
		self MoveM32: 4 r: pointer R: valueHigh.
		self ssPushNativeRegister: valueLow secondRegister: valueHigh.

	] ifFalse: [
		self allocateRegistersForLowcodeIntegerResultInteger: [:pointerValue :valueValue |
			pointer := pointerValue.
			value := valueValue.
		].

		self ssNativeTop nativePopToReg: pointer.
		self ssNativePop: 1.

		self MoveM64: 0 r: pointer R: value.
		self ssPushNativeRegister: value.

	].
	^ 0

